import{w,y,B as I,F as T,J as V,K as u,M as H,O as v,Q as n,R as f,S as C,i as U,U as c,V as d,W as q}from"./index-Dkoz-3t0.js";import"./colorUtils-Bm-Ynj_a.js";import"./floatRGBA-Bvz9OPz7.js";import"./UpdateTracking2D-Dorkrl_O.js";import"./GeometryUtils-DrOFaYve.js";import"./OverrideHelper-DRFiIyhS.js";import"./Container-Bd8B4W_i.js";import"./WGLContainer-DShDaJEk.js";import"./Utils-CBX9GNEO.js";import"./StyleDefinition-B_RlTojX.js";import"./constants-BwsikM5h.js";import"./GridShader-8PdCb3CX.js";import"./pbf-BE7mYI_G.js";import"./TechniqueType-pk2C5RYg.js";import"./FramebufferObject-DnHiYvgK.js";import"./FeatureCommandQueue-DnLswysf.js";import"./PieChartMeshWriter-CfCi4s2C.js";import"./constants-BFLErLYb.js";import"./renderState-Cy74v52Z.js";import"./glsl-Cj7KC756.js";import"./testSVGPremultipliedAlpha-DZRKw_gy.js";import{O as Q}from"./GraphicsView2D-DuduU-Lh.js";import"./earcut-D9gy186-.js";import"./vec3f32-WCVSSNPR.js";import{r as S,o,n as _}from"./imageUtils-C3J0elAg.js";import{S as b,u as P}from"./LayerView-DfLZaLUo.js";import{a as G}from"./HighlightGraphicContainer-Bk4OL1-7.js";import{i as L}from"./RefreshableLayerView-CzDv6d8J.js";import{_ as F,P as k,i as W}from"./MapServiceLayerViewHelper-Bpa5_go8.js";import{r as z}from"./drapedUtils-C3A0Y_Nm.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-B--Eqgl9.js";import"./memoryEstimations-DJrdsxkF.js";import"./rasterizingUtils-B9MMJhJL.js";import"./Rect-CUzevAry.js";import"./quantizationUtils-BfPhYWtU.js";import"./ProgramTemplate-DBoSLg8o.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./config-DHajyIwB.js";import"./featureConversionUtils-CLgpv9Bc.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./GraphShaderModule-BmokOIdS.js";import"./ShaderBuilder-kwgzkb0U.js";import"./BindType-BBwFZqyN.js";import"./utils-Ct4WOfSU.js";import"./CircularArray-CujHzHWW.js";import"./SymbolFader-9bmC6KGI.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CcW63FRf.js";import"./libtess-BQyH2CKr.js";import"./basicInterfaces-N86vRvDz.js";import"./AttributeStore-Q9Ptcp8V.js";import"./queryUtils-DK9ODV3e.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BE2XISEf.js";import"./normalizeUtilsSync-Dlxc8Fpa.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-BMhJKTqu.js";import"./BitmapTechnique-CVoOWP9b.js";import"./bitmapUtils-BfY_O8SC.js";import"./TileContainer-BI2KU9i4.js";import"./layerViewUtils-DQmklFeZ.js";import"./AGraphicContainer-Dnad0GlK.js";import"./TechniqueInstance-GxngTUEK.js";import"./floorFilterUtils-n6UOt7ty.js";import"./sublayerUtils-CoR5xx8L.js";import"./popupUtils-DUXQDcqt.js";const E=[0,0];let l=class extends L(S(b(P))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),this._highlightView?.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,i?.effectiveMinLOD,i?.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,h)=>this.fetchTile(e,h),scheduler:this.scheduler,priority:T.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),F(this,this.layer)){const e=this._highlightView=new Q({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new G(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new k({createFetchPopupFeaturesQueryGeometry:(h,s)=>z(h,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:h,property:s})=>e.graphicUpdateHandler({graphic:h,property:s}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add((()=>this.resampling),(()=>{this.doRefresh()}))),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._popupHighlightHelper?.destroy(),this._highlightView?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=W(t);if(e.length===0)return u();const h=i?.name??H;return this._addHighlightGraphics(e,h),u((()=>!this.destroyed&&this._removeHighlightGraphics(e,h)))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map((e=>e.uid)),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map((e=>e.uid)),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return v(this.layer.tileInfo?.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh((t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t))))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(E,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",(()=>t.destroy())),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:h=0}=i;try{return await this._fetchImage(t,e)}catch(s){if(n(s))throw s;if(!this.resampling)return o(this._tileInfoView.tileInfo.size);if(h<3){const r=this._tileInfoView.getTileParentId(t.id);if(r){const a=new f(r),p=await this._fetchTileWithoutTilemapCache(a,{...i,resamplingLevel:h+1});return _(this._tileInfoView,p,a,t)}}return o(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:h,resamplingLevel:s=0}=i,r=new f(0,0,0,0);let a,p=null;try{if(p=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,r,{signal:h}),!this.resampling&&r.level!==t.level)return await C(i),o(this._tileInfoView.tileInfo.size);a=await this._fetchImage(r,h)}catch(m){if(n(m))throw m;if(this.resampling&&p==="unknown"&&s<3){const g=this._tileInfoView.getTileParentId(t.id);if(g){r.set(g);try{a=await this._fetchTileWithTilemapCache(r,{...i,resamplingLevel:s+1})}catch{}}}}return a?this.resampling?_(this._tileInfoView,a,r,t):a:o(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",(()=>this.requestUpdate()))}catch(i){n(i)||U.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};c([d()],l.prototype,"resampling",null),c([d()],l.prototype,"tilemapCache",null),l=c([q("esri.views.2d.layers.TileLayerView2D")],l);const Yt=l;export{Yt as default};
