import{X as l,Y as h,Z as g,$ as w,a0 as f,a1 as u,a2 as n,U as d,W as V}from"./index-BUVOyi3u.js";import{S as b,u as S}from"./LayerView-BRcMXJPQ.js";import{t as _}from"./GraphicContainer-CVBl0lK6.js";import{O as T}from"./GraphicsView2D-DwZcE6Po.js";import"./Container-B2Osj5ZO.js";import"./layerViewUtils-_yO_e8N7.js";import"./AGraphicContainer-Duqe6rjc.js";import"./TechniqueInstance-UdwrAlY3.js";import"./UpdateTracking2D-C68Ya_hc.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-FMoqsEEr.js";import"./memoryEstimations-BeWODRkP.js";import"./GeometryUtils-B2UimX03.js";import"./rasterizingUtils-o9YMNaOf.js";import"./floatRGBA-DbqG9bE3.js";import"./Rect-CUzevAry.js";import"./Utils-COm7_J_3.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-CJD33KFc.js";import"./ProgramTemplate-BF6-HfKY.js";import"./TileContainer-DRJaSM2d.js";import"./WGLContainer-CpxVeXq6.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-CAFQpHSU.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-DQsLXRMk.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-DseVOv7F.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-BCvY5USq.js";import"./ShaderBuilder-K7xAGJ4_.js";import"./BindType-BBwFZqyN.js";import"./utils-BvIGnHLG.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DDXyUvQS.js";import"./OverrideHelper-CXHa76vY.js";import"./colorUtils-DblWk7md.js";import"./quantizationUtils-CxAufE5k.js";import"./AttributeStore-Ck6N0vxk.js";import"./queryUtils-XBFv1j0-.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Dnsz-kWI.js";import"./normalizeUtilsSync-Dk7O1mk-.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-BBlm7n6k.js";let y=class extends b(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,r){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap((e=>{const i=this._popupTemplates.get(e),s=e.hitTest(t);for(const p of s)p.layer=o,p.sourceLayer=o,p.popupTemplate=i;return s})).map((e=>({type:"graphic",graphic:e,layer:o,mapPoint:t})))}update(t){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(t)}attach(){this.addAttachHandles([l((()=>this.layer?.featureCollections),(t=>{this._clear();for(const{popupInfo:r,featureSet:o,layerDefinition:e}of t){const i=g.fromJSON(o),s=new w(i.features),p=e.drawingInfo,c=r?f.fromJSON(r):null,a=u(p.renderer),m=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:s,renderer:a,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=m,this._popupTemplates.set(m,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=a.symbol):this.layer.lineSymbol=a.symbol:this.layer.polygonSymbol=a.symbol,this.graphicsViews.push(m),this.container.addChild(m.container)}}),h),l((()=>this.layer?.polygonSymbol),(t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})}),h),l((()=>this.layer?.lineSymbol),(t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})}),h),l((()=>this.layer?.pointSymbol),(t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})}),h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=d([V("esri.views.2d.layers.GeoRSSLayerView2D")],y);const ut=y;export{ut as default};
