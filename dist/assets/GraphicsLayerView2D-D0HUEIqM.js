import{a3 as m,a4 as c,a5 as g,$ as n,L as l,K as h,M as d,U as o,V as w,W as u}from"./index-Dkoz-3t0.js";import{S as y,u as V}from"./LayerView-DfLZaLUo.js";import{t as v}from"./GraphicContainer--B4vjHGO.js";import{O as f}from"./GraphicsView2D-DuduU-Lh.js";import"./Container-Bd8B4W_i.js";import"./layerViewUtils-DQmklFeZ.js";import"./AGraphicContainer-Dnad0GlK.js";import"./TechniqueInstance-GxngTUEK.js";import"./UpdateTracking2D-Dorkrl_O.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-B--Eqgl9.js";import"./memoryEstimations-DJrdsxkF.js";import"./GeometryUtils-DrOFaYve.js";import"./rasterizingUtils-B9MMJhJL.js";import"./floatRGBA-Bvz9OPz7.js";import"./Rect-CUzevAry.js";import"./Utils-CBX9GNEO.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-DnHiYvgK.js";import"./ProgramTemplate-DBoSLg8o.js";import"./TileContainer-BI2KU9i4.js";import"./WGLContainer-DShDaJEk.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-B_RlTojX.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-CLgpv9Bc.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-DnLswysf.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-BmokOIdS.js";import"./ShaderBuilder-kwgzkb0U.js";import"./BindType-BBwFZqyN.js";import"./utils-Ct4WOfSU.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CcW63FRf.js";import"./OverrideHelper-DRFiIyhS.js";import"./colorUtils-Bm-Ynj_a.js";import"./quantizationUtils-BfPhYWtU.js";import"./AttributeStore-Q9Ptcp8V.js";import"./queryUtils-DK9ODV3e.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BE2XISEf.js";import"./normalizeUtilsSync-Dlxc8Fpa.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-BMhJKTqu.js";let e=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m((()=>this.layer?.visible),(()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()}))]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map((s=>({type:"graphic",graphic:s,mapPoint:i,layer:this.layer}))):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,s){let t;typeof i=="number"?t=[i]:i instanceof g?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map((r=>r&&r.uid)):n.isCollection(i)&&i.length>0&&(t=i.map((r=>r&&r.uid)).toArray());const p=t?.filter(l);if(!p?.length)return h();const a=s?.name??d;return this._addHighlights(p,a),h((()=>!this.destroyed&&this._removeHighlights(p,a)))}_processHighlight(){const i=this._getHighlights();this.graphicsView?.setHighlight(i)}};o([w()],e.prototype,"graphicsView",void 0),e=o([u("esri.views.2d.layers.GraphicsLayerView2D")],e);const di=e;export{di as default};
