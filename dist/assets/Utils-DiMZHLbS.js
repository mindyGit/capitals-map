import{j5 as k,nm as B,jD as R,dJ as c,nn as v,no as H,i as O,s as F,cU as E,np as z}from"./index-D_kIto8P.js";import{t as D}from"./VertexElementDescriptor-BLyltQyJ.js";var l;let x=(l=class{constructor(t,r,n,s,i,a,o){this.instanceId=t,this.textureKey=r,this.indexStart=n,this.indexCount=s,this.vertexStart=i,this.vertexCount=a,this.overlaps=o}updateBaseOffsets(t){this.vertexStart+=t.vertexFrom,this.indexStart+=t.indexFrom}clone(){return new l(this.instanceId,this.textureKey,this.indexStart,this.indexCount,this.vertexStart,this.vertexCount,this.overlaps)}static write(t,r,n,s,i,a,o,u){t.push(r),t.push(n),t.push(s),t.push(i),t.push(a),t.push(o),t.push(u)}serialize(t){return t.push(this.instanceId),t.push(this.textureKey),t.push(this.indexStart),t.push(this.indexCount),t.push(this.vertexStart),t.push(this.vertexCount),t.push(this.overlaps),t}static deserialize(t){const r=t.readInt32(),n=t.readInt32(),s=t.readInt32(),i=t.readInt32(),a=t.readInt32(),o=t.readInt32(),u=t.readInt32();return new l(r,n,s,i,a,o,u)}},l.byteSizeHint=7*Uint32Array.BYTES_PER_ELEMENT,l);function N(e,t){if(t!==null){e.push(t.length);for(const r of t)r.serialize(e);return e}e.push(0)}function $(e,t,r){const n=e.readInt32(),s=new Array(n);for(let i=0;i<s.length;i++)s[i]=t.deserialize(e,r);return s}var d;let Q=(d=class{constructor(t,r){this.id=t,this.sortKey=r,this.records=[]}serialize(t){return t.push(this.id),t.writeF32(this.sortKey),N(t,this.records),t}static deserialize(t){const r=t.readInt32(),n=t.readF32(),s=new d(r,n);return s.records=$(t,x)??[],s}},d.byteSizeHint=2*Uint32Array.BYTES_PER_ELEMENT+x.byteSizeHint,d),X=class T{constructor(t,r,n,s){this.transformedX=0,this.transformedY=0,this.center=k(t,r),this.centerT=B(),this.halfWidth=n/2,this.halfHeight=s/2,this.width=n,this.height=s}get x(){return this.center[0]}get y(){return this.center[1]}get blX(){return this.center[0]+this.halfWidth}get blY(){return this.center[1]+this.halfHeight}get trX(){return this.center[0]-this.halfWidth}get trY(){return this.center[1]-this.halfHeight}get xmin(){return this.x-this.halfWidth}get xmax(){return this.x+this.halfWidth}get ymin(){return this.y-this.halfHeight}get ymax(){return this.y+this.halfHeight}set x(t){this.center[0]=t}set y(t){this.center[1]=t}clone(){return new T(this.x,this.y,this.width,this.height)}serialize(t){return t.writeF32(this.center[0]),t.writeF32(this.center[1]),t.push(this.width),t.push(this.height),t}findCollisionDelta(t,r=4){const n=Math.abs(t.centerT[0]-this.centerT[0]),s=Math.abs(t.centerT[1]-this.centerT[1]),i=(t.halfWidth+this.halfWidth+r)/n,a=(t.halfHeight+this.halfHeight+r)/s,o=Math.min(i,a);return Math.log2(o)}extend(t){const r=Math.min(this.xmin,t.xmin),n=Math.min(this.ymin,t.ymin),s=Math.max(this.xmax,t.xmax)-r,i=Math.max(this.ymax,t.ymax)-n,a=r+s/2,o=n+i/2;this.width=s,this.height=i,this.halfWidth=s/2,this.halfHeight=i/2,this.x=a,this.y=o}static deserialize(t){const r=t.readF32(),n=t.readF32(),s=t.readInt32(),i=t.readInt32();return new T(r,n,s,i)}};const M=new Float32Array(1),P=new Uint32Array(M.buffer);function G(e){return M[0]=e,P[0]}function tt(e){return P[0]=e,M[0]}function et(e,t){return 65535&e|t<<16}function w(e){const t=G(e),r=t>>>31;let n=t>>>23&255,s=8388607&t;return n-=127,n>15?r<<15|31744:n<-25?0:(n<-14&&(s+=8388608,s/=2**(-14-n),n=-15),n+=15,s/=8192,s=V(s,1023),r<<15|n<<10|s)}function V(e,t){const r=Math.floor(e),n=e-r;return r<t&&(n>.5||n===.5&&r%2==1)?r+1:r}function b(e){let t=e>>>15,r=e>>10&31,n=1023&e;return t=t?-1:1,r-=15,n/=1024,r>-15?n+=1:r=-14,t*2**r*n}function rt(e){const t=e.map((({name:r,count:n,type:s})=>`${r}.${n}.${s}`)).join(",");return R(t)}function f(e,t,r,n,s,i,a){if(e.primitiveName===t){let o=n?.readWithDefault(s,i,e[r]&&a);return e.type==="text"&&(o=o.toString()),void(e[r]=o)}if("type"in e&&e.type!=null){if(e.effects)for(const o of e.effects)f(o,t,r,n,s,i,a);switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.symbolLayers)for(const o of e.symbolLayers)f(o,t,r,n,s,i,a);break;case"CIMTextSymbol":e.symbol&&f(e.symbol,t,r,n,s,i,a);break;case"CIMHatchFill":e.lineSymbol&&f(e.lineSymbol,t,r,n,s,i,a);break;case"CIMPictureMarker":case"CIMCharacterMarker":case"CIMVectorMarker":if(e.markerPlacement&&f(e.markerPlacement,t,r,n,s,i,a),e.type==="CIMVectorMarker"&&e.markerGraphics)for(const o of e.markerGraphics)f(o,t,r,n,s,i,a),f(o.symbol,t,r,n,s,i,a)}}}const W=400;function nt(e){const t=Math.max(1.25*e.width,20);return e.effects!=null&&e.effects.length>0?W:t}function st(e,t,r,n){const s=r.packPrecisionFactor??1;switch(r.type){case c.BYTE:if(r.count===1)e.setInt8(n+r.offset,t*s);else for(let i=0;i<r.count;i++){const a=i*Int8Array.BYTES_PER_ELEMENT;e.setInt8(n+r.offset+a,t[i]*s)}break;case c.UNSIGNED_BYTE:if(r.count===1)e.setUint8(n+r.offset,t*s);else for(let i=0;i<r.count;i++){const a=i*Uint8Array.BYTES_PER_ELEMENT;e.setUint8(n+r.offset+a,t[i]*s)}break;case c.SHORT:if(r.count===1)e.setInt16(n+r.offset,t*s,!0);else for(let i=0;i<r.count;i++){const a=i*Int16Array.BYTES_PER_ELEMENT;e.setInt16(n+r.offset+a,t[i]*s,!0)}break;case c.UNSIGNED_SHORT:if(r.count===1)e.setUint16(n+r.offset,t*s,!0);else for(let i=0;i<r.count;i++){const a=i*Uint16Array.BYTES_PER_ELEMENT;e.setUint16(n+r.offset+a,t[i]*s,!0)}break;case c.INT:if(r.count===1)e.setInt32(n+r.offset,t*s,!0);else for(let i=0;i<r.count;i++){const a=i*Int32Array.BYTES_PER_ELEMENT;e.setInt32(n+r.offset+a,t[i]*s,!0)}break;case c.UNSIGNED_INT:if(r.count===1)e.setUint32(n+r.offset,t*s,!0);else for(let i=0;i<r.count;i++){const a=i*Uint32Array.BYTES_PER_ELEMENT;e.setUint32(n+r.offset+a,t[i]*s,!0)}break;case c.FLOAT:if(r.count===1)e.setFloat32(n+r.offset,t*s,!0);else for(let i=0;i<r.count;i++){const a=i*Float32Array.BYTES_PER_ELEMENT;e.setFloat32(n+r.offset+a,t[i]*s,!0)}break;case c.HALF_FLOAT:if(r.count===1)e.setUint16(n+r.offset,w(t*s),!0);else for(let i=0;i<r.count;i++){const a=i*Uint16Array.BYTES_PER_ELEMENT;e.setUint16(n+r.offset+a,w(t[i]*s),!0)}}}function it(e,t,r){switch(t.type){case c.BYTE:{if(t.count===1)return e.getInt8(r+t.offset);const n=[];for(let s=0;s<t.count;s++){const i=s*Int8Array.BYTES_PER_ELEMENT;n.push(e.getInt8(r+t.offset+i))}return n}case c.UNSIGNED_BYTE:{if(t.count===1)return e.getUint8(r+t.offset);const n=[];for(let s=0;s<t.count;s++){const i=s*Uint8Array.BYTES_PER_ELEMENT;n.push(e.getUint8(r+t.offset+i))}return n}case c.SHORT:{if(t.count===1)return e.getInt16(r+t.offset,!0);const n=[];for(let s=0;s<t.count;s++){const i=s*Int16Array.BYTES_PER_ELEMENT;n.push(e.getInt16(r+t.offset+i,!0))}return n}case c.UNSIGNED_SHORT:{if(t.count===1)return e.getUint16(r+t.offset,!0);const n=[];for(let s=0;s<t.count;s++){const i=s*Uint16Array.BYTES_PER_ELEMENT;n.push(e.getUint16(r+t.offset+i,!0))}return n}case c.INT:{if(t.count===1)return e.getInt32(r+t.offset,!0);const n=[];for(let s=0;s<t.count;s++){const i=s*Int32Array.BYTES_PER_ELEMENT;n.push(e.getInt32(r+t.offset+i,!0))}return n}case c.UNSIGNED_INT:{if(t.count===1)return e.getUint32(r+t.offset,!0);const n=[];for(let s=0;s<t.count;s++){const i=s*Uint32Array.BYTES_PER_ELEMENT;n.push(e.getUint32(r+t.offset+i,!0))}return n}case c.FLOAT:{if(t.count===1)return e.getFloat32(r+t.offset,!0);const n=[];for(let s=0;s<t.count;s++){const i=s*Float32Array.BYTES_PER_ELEMENT;n.push(e.getFloat32(r+t.offset+i,!0))}return n}case c.HALF_FLOAT:{if(t.count===1)return b(e.getUint16(r+t.offset,!0));const n=[];for(let s=0;s<t.count;s++){const i=s*Uint16Array.BYTES_PER_ELEMENT;n.push(b(e.getUint16(r+t.offset+i,!0)))}return n}}}const _=2;let at=class U{constructor(t,r,n,s,i,a,o,u,y,h,m,I=[],p=0,g=0){this.displayId=t,this.labelClassId=r,this.labelIdHash=n,this.hash=s,this.anchorX=i,this.anchorY=a,this.directionX=o,this.directionY=u,this.maxScale=y,this.minScale=h,this.referenceBounds=m,this.bounds=I,this.recordStart=p,this.recordCount=g,this.priority=0,this._colliders=null,this.uniqueSymbol=null,this.selectedForRendering=!1}get xTile(){return this.anchorX}get yTile(){return this.anchorY}colliders(t){if(!this._colliders){const r=t.attributeView,n=H;let s=this.referenceBounds?.size??0;const i=t.layerView.labelingCollisionInfos[0].vvEvaluators[0];if(i!=null){const h=i(r.getVisualVariableData(this.displayId,v.SIZE));s=isNaN(h)||h==null||h===1/0?s:h}const a=this.minScale?t.layerView.view.featuresTilingScheme.scaleToZoom(this.minScale):0,o=this.maxScale?t.layerView.view.featuresTilingScheme.scaleToZoom(this.maxScale):25,u=this.directionX*(n+s/2),y=this.directionY*(n+s/2);this._colliders=this.bounds.map((h=>({labelId:this.labelIdHash,xTile:this.anchorX,yTile:this.anchorY,dxPixels:h.x-h.halfWidth+u,dyPixels:h.y-h.halfHeight+y,hard:!0,partIndex:1,width:h.width+_,height:h.height+_,angle:0,xScreen:0,yScreen:0,dxScreen:0,dyScreen:0,enabled:!0,minLod:a,maxLod:o})))}return this._colliders}get id(){return this.displayId}serialize(t){t.push(this.displayId),t.push(this.labelClassId),t.push(this.labelIdHash),t.push(this.hash),t.push(this.recordStart),t.push(this.recordCount),t.writeF32(this.anchorX),t.writeF32(this.anchorY),t.writeF32(this.directionX),t.writeF32(this.directionY),t.writeF32(this.maxScale),t.writeF32(this.minScale),this.referenceBounds?(t.writeF32(this.referenceBounds.size),t.writeF32(this.referenceBounds.offsetX),t.writeF32(this.referenceBounds.offsetY)):(t.writeF32(0),t.writeF32(0),t.writeF32(0)),N(t,this.bounds)}static deserialize(t){const r=t.readInt32(),n=t.readInt32(),s=t.readInt32(),i=t.readInt32(),a=t.readInt32(),o=t.readInt32(),u=t.readF32(),y=t.readF32(),h=t.readF32(),m=t.readF32(),I=t.readF32(),p=t.readF32(),g=t.readF32(),L=t.readF32(),Y=t.readF32(),C=$(t,X)??[];return new U(r,n,s,i,u,y,h,m,I,p,{size:g,offsetX:L,offsetY:Y},C,a,o)}};const A=()=>O.getLogger("esri.views.2d.engine.webgl.Utils");function ot(e){switch(e){case E.UNSIGNED_BYTE:return 1;case E.UNSIGNED_SHORT_4_4_4_4:return 2;case E.FLOAT:return 4;default:return void A().error(new F("webgl-utils",`Unable to handle type ${e}`))}}function ct(e){switch(e){case E.UNSIGNED_BYTE:return Uint8Array;case E.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case E.FLOAT:return Float32Array;default:return void A().error(new F("webgl-utils",`Unable to handle type ${e}`))}}function K(e){const t=new Map;for(const r in e){const n=e[r];let s=0;t.set(r,n.map((i=>{const a=new D(i.name,i.count,i.type,s,0,i.normalized||!1);return s+=i.count*z(i.type),a}))),t.get(r).forEach((i=>i.stride=s))}return t}const j=e=>{const t=new Map;for(const r in e)for(const n of e[r])t.set(n.name,n.location);return t},Z=e=>{const t={};return e.forEach(((r,n)=>t[n]=r?.length?r[0].stride:0)),t},S=new Map,ht=(e,t)=>{if(!S.has(e)){const r=K(t),n={strides:Z(r),bufferLayouts:r,attributes:j(t)};S.set(e,n)}return S.get(e)},ut=e=>e.includes("data:image/svg+xml");function lt(e){const t=[];for(let r=0;r<e.length;r++)t.push(e.charCodeAt(r));return t}function ft(e){if(e==null)return"";const{type:t}=e;switch(t){case"CIMMarkerPlacementAlongLineRandomSize":return`${t}-${e.seed}-${e.randomization}`;case"CIMMarkerPlacementAlongLineVariableSize":return`${t}-${e.maxRandomOffset}-${e.numberOfSizes}-${e.seed}-${e.variationMethod}`;case"CIMMarkerPlacementAtExtremities":return`${t}-${e.extremityPlacement}-${e.offsetAlongLine}`;case"CIMMarkerPlacementAtRatioPositions":return`${t}-${e.beginPosition}-${e.endPosition}-${e.flipFirst}-${JSON.stringify(e.positionArray)}`;case"CIMMarkerPlacementAtMeasuredUnits":return`${t}-${e.interval}-${e.skipMarkerRate}-${e.placeAtExtremities}`;case"CIMMarkerPlacementInsidePolygon":return`${t}-${e.stepX}-${e.stepY}-${e.randomness}-${e.gridType}-${e.seed}-${e.shiftOddRows}`;case"CIMMarkerPlacementOnLine":return`${t}-${e.relativeTo}-${e.startPointOffset}`;case"CIMMarkerPlacementOnVertices":return`${t}-${e.placeOnControlPoints}-${e.placeOnEndPoints}-${e.placeOnRegularVertices}`;case"CIMMarkerPlacementPolygonCenter":return`${t}-${e.method}`;default:return`${t}`}}export{ht as $,at as a,X as b,x as c,G as d,it as e,et as f,st as g,tt as h,ct as i,nt as j,lt as k,ut as l,$ as n,ot as o,ft as p,f as r,Q as s,rt as t};
