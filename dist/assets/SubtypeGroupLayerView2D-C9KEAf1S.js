import{X as a,Y as n,v as d,U as u,W as l}from"./index-BUVOyi3u.js";import{c as g}from"./FeatureLayerView2D-WwVVbleU.js";import"./Container-B2Osj5ZO.js";import"./featureConversionUtils-DQsLXRMk.js";import"./OptimizedFeature-FMoqsEEr.js";import"./memoryEstimations-BeWODRkP.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./timeSupport-CahzyF1M.js";import"./AttributeBinsFeatureSet-BJwpQKsf.js";import"./AttributeBinsQuery-v901CNOB.js";import"./queryUtils-XBFv1j0-.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-DsQ2zXol.js";import"./LayerView-BRcMXJPQ.js";import"./layerViewUtils-_yO_e8N7.js";import"./TechniqueInstance-UdwrAlY3.js";import"./UpdateTracking2D-C68Ya_hc.js";import"./BidiEngine-QXap_35O.js";import"./GeometryUtils-B2UimX03.js";import"./rasterizingUtils-o9YMNaOf.js";import"./floatRGBA-DbqG9bE3.js";import"./Rect-CUzevAry.js";import"./Utils-COm7_J_3.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-CJD33KFc.js";import"./ProgramTemplate-BF6-HfKY.js";import"./TileContainer-DRJaSM2d.js";import"./WGLContainer-CpxVeXq6.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-CAFQpHSU.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-DseVOv7F.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-BCvY5USq.js";import"./ShaderBuilder-K7xAGJ4_.js";import"./BindType-BBwFZqyN.js";import"./utils-BvIGnHLG.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DDXyUvQS.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-D_zII3yo.js";import"./constants-B4mRqufT.js";import"./bundle-B2FM5W1M.js";import"./floorFilterUtils-n6UOt7ty.js";import"./popupUtils-szFnEdDv.js";import"./RefreshableLayerView-Dl3HpAdC.js";let i=class extends g{initialize(){this.addHandles([a((()=>this.view.scale),(()=>this._update()),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some((s=>s.renderer!=null)),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ai=i;export{ai as default};
