import{X as a,Y as n,v as d,U as u,W as l}from"./index-D_kIto8P.js";import{c as g}from"./FeatureLayerView2D-a-m36EOj.js";import"./Container-CRkidzDP.js";import"./featureConversionUtils-Cy6gt9RF.js";import"./OptimizedFeature-DMnMQFm_.js";import"./memoryEstimations-DHxKJG1K.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./timeSupport-B5hb0CND.js";import"./AttributeBinsFeatureSet-BJ_tHGCr.js";import"./AttributeBinsQuery-uj3LfLJF.js";import"./queryUtils-CSbzEI-C.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-BWKqERmP.js";import"./LayerView-CGNIKQQr.js";import"./layerViewUtils-P4rNY7xT.js";import"./TechniqueInstance-BoF6I3KD.js";import"./UpdateTracking2D-inFbf2aX.js";import"./BidiEngine-QXap_35O.js";import"./GeometryUtils-B_KQySvF.js";import"./rasterizingUtils-CtIUkhj1.js";import"./floatRGBA-HjLlvrmT.js";import"./Rect-CUzevAry.js";import"./Utils-DiMZHLbS.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-BSvYxCrt.js";import"./ProgramTemplate-CO69b7Zc.js";import"./TileContainer-DMaBEbHO.js";import"./WGLContainer-DmucEZBL.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-Dj0fvjVV.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-BuZYQTYD.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-CKgX9lrV.js";import"./ShaderBuilder-DX4tMa1P.js";import"./BindType-BBwFZqyN.js";import"./utils-BEQYi_Fc.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-jkZqabx3.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-BymNc7JW.js";import"./constants-B4mRqufT.js";import"./bundle-B2FM5W1M.js";import"./floorFilterUtils-n6UOt7ty.js";import"./popupUtils-G3CnaYUF.js";import"./RefreshableLayerView-CONkDJQM.js";let i=class extends g{initialize(){this.addHandles([a((()=>this.view.scale),(()=>this._update()),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some((s=>s.renderer!=null)),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ai=i;export{ai as default};
