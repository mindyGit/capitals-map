import{e as Ot}from"./deduplicate-DbeQ357u.js";import{O as F}from"./InterleavedLayout-CsbnLE7v.js";import{e as c}from"./VertexAttribute-BfkzOMLV.js";import{t as et}from"./glUtil-GXHmzFt6.js";import{am as T,dc as nt,ez as St,ey as q,aW as at,aI as J,ef as it,aK as ht,aM as dt,eB as At,eA as Et,aY as gt,eh as Tt,md as wt}from"./index-DMtm2B-0.js";import{e as Q}from"./Normals-Cy8btSYh.js";const vt=F().vec3f(c.POSITION).u16(c.COMPONENTINDEX).freeze(),yt=F().vec2u8(c.SIDENESS).freeze();et(yt);const j=F().vec3f(c.POSITION0).vec3f(c.POSITION1).vec2i16(c.NORMALCOMPRESSED).u16(c.COMPONENTINDEX).u8(c.VARIANTOFFSET,{glNormalized:!0}).u8(c.VARIANTSTROKE).u8(c.VARIANTEXTENSION,{glNormalized:!0}).freeze(),H=F().vec3f(c.POSITION0).vec3f(c.POSITION1).vec2i16(c.NORMALCOMPRESSED).vec2i16(c.NORMAL2COMPRESSED).u16(c.COMPONENTINDEX).u8(c.VARIANTOFFSET,{glNormalized:!0}).u8(c.VARIANTSTROKE).u8(c.VARIANTEXTENSION,{glNormalized:!0}).freeze();c.POSITION0,c.POSITION1,c.COMPONENTINDEX,c.VARIANTOFFSET,c.VARIANTSTROKE,c.VARIANTEXTENSION,c.NORMALCOMPRESSED,c.NORMAL2COMPRESSED,c.SIDENESS;class $t{constructor(){this.position0=T(),this.position1=T(),this.faceNormal0=T(),this.faceNormal1=T(),this.componentIndex=0,this.cosAngle=0}}const K=-1;function Mt(t,n,s){const r=t.vertices.position,i=t.vertices.componentIndex,f=m.position0,d=m.position1,g=m.faceNormal0,S=m.faceNormal1,{edges:a,normals:p}=xt(t),I=a.length/4,A=n.allocate(I);let R=0;const B=I,w=s?.allocate(B);let b=0,e=0,o=0;z.length=0;for(let h=0;h<I;++h){const y=4*h;r.getVec(a.data[y],f),r.getVec(a.data[y+1],d);const x=z.pushNew();x.index=4*h,x.length=St(f,d)}z.sort(((h,y)=>y.length-h.length));const u=new Array,l=new Array;z.forAll((({length:h,index:y})=>{const x=a.data[y],It=a.data[y+1],st=a.data[y+2],ot=a.data[y+3],rt=ot===K;if(r.getVec(x,f),r.getVec(It,d),rt){const E=3*st;q(g,p.data[E],p.data[E+1],p.data[E+2]),at(S,g),m.componentIndex=i.get(x),m.cosAngle=J(g,S)}else{let E=3*st;if(q(g,p.data[E],p.data[E+1],p.data[E+2]),E=3*ot,q(S,p.data[E],p.data[E+1],p.data[E+2]),m.componentIndex=i.get(x),m.cosAngle=J(g,S),Rt(m,Lt))return;m.cosAngle<-.9999&&at(S,g)}e+=h,o++,rt||Pt(m,Bt)?(n.write(A,R++,m),u.push(h)):Vt(m,Nt)&&(w&&s&&s.write(w,b++,m),l.push(h))}));const O=new Float32Array(u.reverse()),v=new Float32Array(l.reverse()),$=w&&s?{instancesData:w.slice(0,b),lodInfo:{lengths:v}}:void 0;return{regular:{instancesData:A.slice(0,R),lodInfo:{lengths:O}},silhouette:$,averageEdgeLength:e/o}}function Pt(t,n){return t.cosAngle<n}function Rt(t,n){return t.cosAngle>n}function Vt(t,n){const s=At(t.cosAngle);return Et(ct,t.position1,t.position0),s*(J(ht(Ct,t.faceNormal0,t.faceNormal1),ct)>0?-1:1)>n}function xt(t){const n=t.faces.length/3,s=t.faces,r=t.neighbors,i=t.vertices.position;N.length=Y.length=0;for(let f=0;f<n;f++){const d=3*f,g=r[d],S=r[d+1],a=r[d+2],p=s[d],I=s[d+1],A=s[d+2];i.getVec(p,V),i.getVec(I,X),i.getVec(A,U),it(X,X,V),it(U,U,V),ht(V,X,U),dt(V,V),Y.pushArray(V),(g===K||p<I)&&(N.push(p),N.push(I),N.push(f),N.push(g)),(S===K||I<A)&&(N.push(I),N.push(A),N.push(f),N.push(S)),(a===K||A<p)&&(N.push(A),N.push(p),N.push(f),N.push(a))}return{edges:N,normals:Y}}class Dt{constructor(){this.index=0,this.length=0}}const z=new nt({allocator:t=>t||new Dt,deallocator:null}),N=new nt({deallocator:null}),Y=new nt({deallocator:null}),m=new $t,Ct=T(),ct=T(),V=T(),X=T(),U=T(),Nt=gt(4),Lt=Math.cos(Nt),Ft=gt(35),Bt=Math.cos(Ft);function lt(t,n,s){const r=n/3,i=new Uint32Array(s+1),f=new Uint32Array(s+1),d=(e,o)=>{e<o?i[e+1]++:f[o+1]++};for(let e=0;e<r;e++){const o=t[3*e],u=t[3*e+1],l=t[3*e+2];d(o,u),d(u,l),d(l,o)}let g=0,S=0;for(let e=0;e<s;e++){const o=i[e+1],u=f[e+1];i[e+1]=g,f[e+1]=S,g+=o,S+=u}const a=new Uint32Array(6*r),p=i[s],I=(e,o,u)=>{if(e<o){const l=i[e+1]++;a[2*l]=o,a[2*l+1]=u}else{const l=f[o+1]++;a[2*p+2*l]=e,a[2*p+2*l+1]=u}};for(let e=0;e<r;e++){const o=t[3*e],u=t[3*e+1],l=t[3*e+2];I(o,u,e),I(u,l,e),I(l,o,e)}const A=(e,o)=>{const u=2*e,l=o-e;for(let O=1;O<l;O++){const v=a[u+2*O],$=a[u+2*O+1];let h=O-1;for(;h>=0&&a[u+2*h]>v;h--)a[u+2*h+2]=a[u+2*h],a[u+2*h+3]=a[u+2*h+1];a[u+2*h+2]=v,a[u+2*h+3]=$}};for(let e=0;e<s;e++)A(i[e],i[e+1]),A(p+f[e],p+f[e+1]);const R=new Int32Array(3*r),B=(e,o)=>e===t[3*o]?0:e===t[3*o+1]?1:e===t[3*o+2]?2:-1,w=(e,o)=>{const u=B(e,o);R[3*o+u]=-1},b=(e,o,u,l)=>{const O=B(e,o);R[3*o+O]=l;const v=B(u,l);R[3*l+v]=o};for(let e=0;e<s;e++){let o=i[e];const u=i[e+1];let l=f[e];const O=f[e+1];for(;o<u&&l<O;){const v=a[2*o],$=a[2*p+2*l];v===$?(b(e,a[2*o+1],$,a[2*p+2*l+1]),o++,l++):v<$?(w(e,a[2*o+1]),o++):(w($,a[2*p+2*l+1]),l++)}for(;o<u;)w(e,a[2*o+1]),o++;for(;l<O;)w(a[2*p+2*l],a[2*p+2*l+1]),l++}return R}const G=.7;let mt=class{updateSettings(n){this.settings=n,this._edgeHashFunction=n.reducedPrecision?zt:bt}write(n,s,r){W.seed=this._edgeHashFunction(r);const i=W.getIntRange(0,255),f=W.getIntRange(0,this.settings.variants-1),d=W.getFloat(),g=255*(.5*Xt(-(1-Math.min(d/G,1))+Math.max(0,d-G)/(1-G),1.2)+.5);n.position0.setVec(s,r.position0),n.position1.setVec(s,r.position1),n.componentIndex.set(s,r.componentIndex),n.variantOffset.set(s,i),n.variantStroke.set(s,f),n.variantExtension.set(s,g)}};const M=new Float32Array(6),P=new Uint32Array(M.buffer),L=new Uint32Array(1);function bt(t){return M[0]=t.position0[0],M[1]=t.position0[1],M[2]=t.position0[2],M[3]=t.position1[0],M[4]=t.position1[1],M[5]=t.position1[2],L[0]=31*(31*(31*(31*(31*(166811+P[0])+P[1])+P[2])+P[3])+P[4])+P[5],L[0]}function zt(t){const n=M;n[0]=D(t.position0[0]),n[1]=D(t.position0[1]),n[2]=D(t.position0[2]),n[3]=D(t.position1[0]),n[4]=D(t.position1[1]),n[5]=D(t.position1[2]),L[0]=5381;for(let s=0;s<P.length;s++)L[0]=31*L[0]+P[s];return L[0]}const ut=1e4;function D(t){return Math.round(t*ut)/ut}function Xt(t,n){return Math.abs(t)**n*Math.sign(t)}const _=class _{constructor(){this._commonWriter=new mt}updateSettings(n){this._commonWriter.updateSettings(n)}allocate(n){return j.createBuffer(n)}write(n,s,r){this._commonWriter.write(n,s,r),Tt(C,r.faceNormal0,r.faceNormal1),dt(C,C);const{typedBuffer:i,typedBufferStride:f}=n.normalCompressed;Q(i,s,C[0],C[1],C[2],f)}};_.Layout=j,_.glLayout=et(j,1);let Z=_;const k=class k{constructor(){this._commonWriter=new mt}updateSettings(n){this._commonWriter.updateSettings(n)}allocate(n){return H.createBuffer(n)}write(n,s,r){this._commonWriter.write(n,s,r);{const{typedBuffer:i,typedBufferStride:f}=n.normalCompressed;Q(i,s,r.faceNormal0[0],r.faceNormal0[1],r.faceNormal0[2],f)}{const{typedBuffer:i,typedBufferStride:f}=n.normal2Compressed;Q(i,s,r.faceNormal1[0],r.faceNormal1[1],r.faceNormal1[2],f)}}};k.Layout=H,k.glLayout=et(H,1);let tt=k;const C=T(),W=new wt;function Gt(t){const n=Ut(t.data,t.skipDeduplicate,t.indices,t.indicesLength);return ft.updateSettings(t.writerSettings),pt.updateSettings(t.writerSettings),Mt(n,ft,pt)}function Ut(t,n,s,r){if(n){const d=lt(s,r,t.count);return new Wt(s,r,d,t)}const i=Ot(t.buffer,t.stride/4,{originalIndices:s}),f=lt(i.indices,r,i.uniqueCount);return{faces:i.indices,facesLength:i.indices.length,neighbors:f,vertices:vt.createView(i.buffer)}}class Wt{constructor(n,s,r,i){this.faces=n,this.facesLength=s,this.neighbors=r,this.vertices=i}}const ft=new Z,pt=new tt,Jt=F().vec3f(c.POSITION0).vec3f(c.POSITION1),Qt=F().vec3f(c.POSITION0).vec3f(c.POSITION1).u16(c.COMPONENTINDEX);export{vt as E,Jt as d,Gt as f,Qt as g,Mt as p,Ut as u};
