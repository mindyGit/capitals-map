import{a3 as m,a4 as c,a5 as g,$ as n,L as l,K as h,M as d,U as o,V as w,W as u}from"./index-D_kIto8P.js";import{S as y,u as V}from"./LayerView-CGNIKQQr.js";import{t as v}from"./GraphicContainer-DdlmZ6BM.js";import{O as f}from"./GraphicsView2D-BqwS5Jr1.js";import"./Container-CRkidzDP.js";import"./layerViewUtils-P4rNY7xT.js";import"./AGraphicContainer-CEu3y2aa.js";import"./TechniqueInstance-BoF6I3KD.js";import"./UpdateTracking2D-inFbf2aX.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-DMnMQFm_.js";import"./memoryEstimations-DHxKJG1K.js";import"./GeometryUtils-B_KQySvF.js";import"./rasterizingUtils-CtIUkhj1.js";import"./floatRGBA-HjLlvrmT.js";import"./Rect-CUzevAry.js";import"./Utils-DiMZHLbS.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-BSvYxCrt.js";import"./ProgramTemplate-CO69b7Zc.js";import"./TileContainer-DMaBEbHO.js";import"./WGLContainer-DmucEZBL.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-Dj0fvjVV.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-Cy6gt9RF.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-BuZYQTYD.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-CKgX9lrV.js";import"./ShaderBuilder-DX4tMa1P.js";import"./BindType-BBwFZqyN.js";import"./utils-BEQYi_Fc.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-jkZqabx3.js";import"./OverrideHelper-Dbzvp2lb.js";import"./colorUtils-CNP_n98J.js";import"./quantizationUtils-D06tq-yg.js";import"./AttributeStore-XtMj7Zpd.js";import"./queryUtils-CSbzEI-C.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DJrntIMj.js";import"./normalizeUtilsSync-BrJLj4lH.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-Cch6YCZr.js";let e=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m((()=>this.layer?.visible),(()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()}))]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map((s=>({type:"graphic",graphic:s,mapPoint:i,layer:this.layer}))):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,s){let t;typeof i=="number"?t=[i]:i instanceof g?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map((r=>r&&r.uid)):n.isCollection(i)&&i.length>0&&(t=i.map((r=>r&&r.uid)).toArray());const p=t?.filter(l);if(!p?.length)return h();const a=s?.name??d;return this._addHighlights(p,a),h((()=>!this.destroyed&&this._removeHighlights(p,a)))}_processHighlight(){const i=this._getHighlights();this.graphicsView?.setHighlight(i)}};o([w()],e.prototype,"graphicsView",void 0),e=o([u("esri.views.2d.layers.GraphicsLayerView2D")],e);const di=e;export{di as default};
